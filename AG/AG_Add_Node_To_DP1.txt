 --YOU MUST EXECUTE THE FOLLOWING SCRIPT IN SQLCMD MODE.

:CONNECT ATPR0SVBOCUSN7
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELTRADE\bidba.admin]
GO

:CONNECT ATPR0SVBOCUSN8
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELTRADE\bidba.admin]
GO

:CONNECT ATDR0SVBOCUSN7
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELTRADE\bidba.admin]
GO

:CONNECT ATDR0SVBOCUSN8
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELTRADE\bidba.admin]
GO

:CONNECT AOPR0SPSDBN71
USE [master]
GO
CREATE ENDPOINT [Hadr_endpoint]
AS TCP (LISTENER_PORT = 5022)
FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES)
GO
IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED
END
GO
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELTRADE\bidba.admin]
GO

IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END
IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END
GO

:CONNECT AOPR0SPSDBN72
USE [master]
GO
CREATE ENDPOINT [Hadr_endpoint]
AS TCP (LISTENER_PORT = 5022)
FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES)
GO
IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED
END
GO
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELTRADE\bidba.admin]
GO

IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END
IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END
GO


:CONNECT ATPR0SVBOCUSN7
USE [master]
GO
ALTER AVAILABILITY GROUP [AGMUBODPNODEL1]
ADD REPLICA ON N'AOPR0SPSDBN71' WITH (ENDPOINT_URL = N'TCP://AOPR0SPSDBN71.ANGELTRADE.COM:5022', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = ALL));
GO
ALTER AVAILABILITY GROUP [AGMUBODPNODEL1]
ADD REPLICA ON N'AOPR0SPSDBN72' WITH (ENDPOINT_URL = N'TCP://AOPR0SPSDBN72.ANGELTRADE.COM:5022', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = ALL));
GO

:CONNECT AOPR0SPSDBN71
ALTER AVAILABILITY GROUP [AGMUBODPNODEL1] JOIN;
GO
ALTER AVAILABILITY GROUP [AGMUBODPNODEL1] GRANT CREATE ANY DATABASE;
GO

:CONNECT AOPR0SPSDBN72
ALTER AVAILABILITY GROUP [AGMUBODPNODEL1] JOIN;
GO
ALTER AVAILABILITY GROUP [AGMUBODPNODEL1] GRANT CREATE ANY DATABASE;
GO

-- *************** TO REMOVE
/*
USE [master]
GO
ALTER AVAILABILITY GROUP [AGMUBODPNODEL1]
REMOVE REPLICA ON N'AOPR0SPSDBN71'
GO
ALTER AVAILABILITY GROUP [AGMUBODPNODEL1]
REMOVE REPLICA ON N'AOPR0SPSDBN72'
GO
*/


