 --YOU MUST EXECUTE THE FOLLOWING SCRIPT IN SQLCMD MODE.

:Connect ABPR0SVBOCUSN1
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELBROKING\bidba.admin]
GO
:Connect ABPR0SVBOCUSN2
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELBROKING\bidba.admin]
GO
:Connect ABDR0SVBOCUSN1
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELBROKING\bidba.admin]
GO
:Connect AOPR0SPSDBN67
USE [master]
GO
CREATE ENDPOINT [Hadr_endpoint]
AS TCP (LISTENER_PORT = 5022)
FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES)
GO
IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED
END
GO
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELBROKING\bidba.admin]
GO
:Connect AOPR0SPSDBN67
IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END
IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END
GO
:Connect AOPR0SPSDBN68
USE [master]
GO
CREATE ENDPOINT [Hadr_endpoint]
AS TCP (LISTENER_PORT = 5022)
FOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES)
GO
IF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0
BEGIN
ALTER ENDPOINT [Hadr_endpoint] STATE = STARTED
END
GO
use [master]
GO
GRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [ANGELBROKING\bidba.admin]
GO
:Connect AOPR0SPSDBN68
IF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')
BEGIN
ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);
END
IF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')
BEGIN
ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;
END
GO
:Connect ABPR0SVBOCUSN1
USE [master]
GO
USE [master]
GO
ALTER AVAILABILITY GROUP [AG_AngelDEMAT]
ADD REPLICA ON N'AOPR0SPSDBN67' WITH (ENDPOINT_URL = N'TCP://AOPR0SPSDBN67.ANGELBROKING.COM:5022', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = ALL));
GO
ALTER AVAILABILITY GROUP [AG_AngelDEMAT]
ADD REPLICA ON N'AOPR0SPSDBN68' WITH (ENDPOINT_URL = N'TCP://AOPR0SPSDBN68.ANGELBROKING.COM:5022', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = ALL));
GO
:Connect AOPR0SPSDBN67
ALTER AVAILABILITY GROUP [AG_AngelDEMAT] JOIN;
GO
ALTER AVAILABILITY GROUP [AG_AngelDEMAT] GRANT CREATE ANY DATABASE;
GO
:Connect AOPR0SPSDBN68
ALTER AVAILABILITY GROUP [AG_AngelDEMAT] JOIN;
GO
ALTER AVAILABILITY GROUP [AG_AngelDEMAT] GRANT CREATE ANY DATABASE;
GO
---- To remove 
USE [master]
GO
ALTER AVAILABILITY GROUP [AG_AngelDEMAT]
REMOVE REPLICA ON N'AOPR0SPSDBN67'
GO
ALTER AVAILABILITY GROUP [AG_AngelDEMAT]
REMOVE REPLICA ON N'AOPR0SPSDBN68'
GO